/**
 * format.du
 *
 * Testing the str.format() method
 *
 * .format() interpolates values into a string
 */
from UnitTest import UnitTest;

def test() {}
class Test {}
trait Trait {}

class TestStringFormat < UnitTest {
    testStringFormat() {
        this.assertEquals("hello {}".format("jason"), "hello jason");
        this.assertEquals("hello {}".format(10), "hello 10");
        this.assertEquals("hello {}".format([10]), "hello [10]");
        this.assertEquals("hello {}. {} {}".format("jason", 10, [10]), "hello jason. 10 [10]");
        this.assertEquals("{}".format("jason"), "jason");
        this.assertEquals("{}".format({"test": 10, "aaa": 10}), '{"aaa": 10, "test": 10}');
        this.assertEquals("{} {} {}".format(test, Test, Trait), '<fn test> <Cls Test> <Trait Trait>');
    }
    testStringFormatUnicode() {
        this.assertEquals("World: {} is {}".format("🌍", "😎"), "World: 🌍 is 😎");
        this.assertEquals("hello {}".format(["🌐😁⚓🌍"]), "hello [\"🌐😁⚓🌍\"]");
    }
}

TestStringFormat().run();