/**
 * slicing.du
 *
 * Testing string slicing
 */
from UnitTest import UnitTest;

class TestStringSlicing < UnitTest {
    testStringSlice() {
        const x = "Dictu";

        this.assertEquals(x[0:x.len()], "Dictu");
        this.assertEquals(x[0:], "Dictu");
        this.assertEquals(x[1:], "ictu");
        this.assertEquals(x[2:], "ctu");
        this.assertEquals(x[3:], "tu");
        this.assertEquals(x[4:], "u");
        this.assertEquals(x[5:], "");

        this.assertEquals(x[:x.len()], "Dictu");
        this.assertEquals(x[:5], "Dictu");
        this.assertEquals(x[:4], "Dict");
        this.assertEquals(x[:3], "Dic");
        this.assertEquals(x[:2], "Di");
        this.assertEquals(x[:1], "D");
        this.assertEquals(x[:0], "");

        this.assertEquals(x[1:4], "ict");
        this.assertEquals(x[1:3], "ic");
        this.assertEquals(x[1:2], "i");
        this.assertEquals(x[1:1], "");

        this.assertEquals(x[2:5], "ctu");
        this.assertEquals(x[2:4], "ct");
        this.assertEquals(x[2:3], "c");
    }
    testStringSliceUnicode() {
        const x = "😀🌍🐦aä";
        this.assertEquals(x[0:x.len()], x);
        this.assertEquals(x[0:], x);
        this.assertEquals(x[1:], "🌍🐦aä");
        this.assertEquals(x[2:], "🐦aä");
        this.assertEquals(x[3:], "aä");
        this.assertEquals(x[4:], "ä");
        this.assertEquals(x[5:], "");

        this.assertEquals(x[:5], "😀🌍🐦aä");
        this.assertEquals(x[:4], "😀🌍🐦a");
        this.assertEquals(x[:3], "😀🌍🐦");
        this.assertEquals(x[:2], "😀🌍");
        this.assertEquals(x[:1], "😀");
        this.assertEquals(x[:0], "");

        this.assertEquals(x[1:4], "🌍🐦a");
        this.assertEquals(x[1:3], "🌍🐦");
        this.assertEquals(x[1:2], "🌍");
        this.assertEquals(x[1:1], "");

        this.assertEquals(x[2:5], "🐦aä");
        this.assertEquals(x[2:4], "🐦a");
        this.assertEquals(x[2:3], "🐦");
        this.assertEquals(x[:x.len()], x);
    }
}

TestStringSlicing().run();